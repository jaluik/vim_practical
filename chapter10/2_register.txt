
collection = getCollection();
process(somethingInTheWay, target);


vim的删除、复制和粘贴命令都会用到众多寄存器中的某一个。可以通过给命令加"{register}前缀的方式指定要使用的寄存器。若不指定，则使用无名寄存器。
"_d{motion} 会执行真正的删除操作

比如 想把当前单词复制到寄存器a中，可执行"ayiw 或执行"bdd 把当前整行文本剪贴至寄存器b中。到时候可以使用"ap粘贴单词或者"bp来粘贴段落。


也可以使用:delete c 把当前行剪切到寄存器c中，然后执行:put c 将其粘贴到当前光标所在行之下

无名寄存器就是"" ，如果想要使用无名寄存器的话，需要使用"", 如""P 它完全定价于p命令

执行y{motion}的命令时，要复制的文本不尽会被拷贝到无名寄存器里面，还会拷贝到复制专用寄存器中，后者可以加数字0进行引用

:reg "0 可以查看0寄存器寄存的文本


vim 的加号寄存器与系统剪贴板等效， 可以使用"+ 来进行引用, "* 也可以来引用
在插入模式下，可以使用<C-r>+ 的方式进行粘贴引用


"=  会跳到命令行模式，此时可以输入vim脚本，并通过<Enter> 执行

只读寄存器

"% 当前文件名
"# 轮换文件名
". 上次插入的文本
": 上次执行的Ex命令
"/ 上次查找的模式

ve 进入可视模式，然后选中一个单词

gv 选择上一次高亮选区的内容

